{"version":3,"sources":["reportWebVitals.ts","AppCss.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/Post/MyPostMatUI.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Footer/Footer.tsx","components/Dialogs/DialogItem.tsx","components/Dialogs/Message.tsx","components/Dialogs/Dialogs.tsx","components/Charts/Chart.tsx","App.tsx","redux/state.tsx","render.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","toolbar","backgroundColor","title","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroungRepeat","backgroundPosition","mainFeaturesPostContent","padding","marginTop","mainContent","navbar","footer","avatarLarge","width","height","newPost","navLink","textDecoration","fontWeight","lastMessage","marginLeft","navLinkDialogs","btnPost","Header","s","AppBar","className","Container","maxWidth","Toolbar","IconButton","edge","Typography","to","Box","mr","Button","variant","Paper","style","backgroundImage","Grid","container","item","md","component","gutterBottom","Navbar","List","map","text","index","ListItem","button","ListItemText","primary","Post","props","Card","CardActionArea","CardMedia","alt","image","CardContent","message","CardActions","size","MyPosts","postsElements","posts","p","id","xs","type","name","multiple","TextareaAutosize","onChange","event","dispatch","newText","currentTarget","value","newPostText","rows","placeholder","onClick","DialogTitle","withStyles","createStyles","margin","closeButton","right","top","grey","children","classes","onClose","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","React","useState","open","setOpen","handleClose","Dialog","dividers","autoFocus","ProfileInfo","justify","Avatar","src","Profile","Footer","BottomNavigation","join","handleChange","BottomNavigationAction","label","icon","DialogItem","ListItemAvatar","MessageItem","Dialogs","dialogsElements","dialogs","d","messagesElements","messages","m","LineChart","d3Chart","useRef","useEffect","fetch","res","json","data","console","log","ref","App","state","store","getState","Divider","orientation","flexItem","path","render","bind","profilePage","dialogsPage","_state","likesCount","_onChange","subscribe","callback","this","updateNewPostText","addPost","Date","getTime","unshift","action","renderTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2369924b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {makeStyles} from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport { isWhiteSpaceLike } from 'typescript';\n\n\nexport const useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  toolbar: {\n    backgroundColor: \"#117B80\",\n  },\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturesPost: {\n    position: \"relative\",\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundSize: \"cover\",\n    backgroungRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  mainFeaturesPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(6),\n    marginTop: theme.spacing(8)\n  },\n  mainContent: {},\n  navbar: {\n    flexGrow: 6\n  },\n  footer: {\n    backgroundColor: \"#117B80\",\n    marginTop: \"740px\",\n  },\n  avatarLarge: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n  },\n  newPost: {\n    width: \"99%\",\n    height: 50\n  },\n  marginBottom: {\n    marginBottom: \"10em\"\n  },\n  navLink: {\n    color: \"white\",\n    textDecoration: \"none\",\n    \"&.active\": {\n      color: \"orange\",\n      fontWeight: \"bold\"\n\n    }\n  },\n  lastMessage: {\n    marginLeft: \"10em\",\n\n  },\n  navLinkDialogs: {\n    color: \"black\",\n    textDecoration: \"none\",\n    \"&.active\": {\n      color: \"grey\",\n      fontWeight: \"bold\"\n    },\n  },\n  btnPost:{\n    marginLeft:\"84em\"\n  }\n}\n))","import React from \"react\";\nimport { Container, Grid, AppBar, Toolbar, IconButton, Typography,\n    Button, Box, Paper,Link} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\n\ntype HeaderProps = {\n\n}\n\nexport function Header () {\n    const s = useStyles()\n    return (<div>\n         <AppBar position=\"fixed\" className={s.toolbar}>\n            <Container maxWidth=\"xl\">\n              <Toolbar  >\n                <IconButton edge=\"start\" color=\"inherit\"\n                  aria-label=\"menu\" className={s.menuButton}>\n                  <MenuIcon />\n                </IconButton>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/profile\">Profile</NavLink></Typography>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/dialogs\">Dialogs</NavLink></Typography>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/news\">News</NavLink></Typography>\n                <Typography className={s.title}>Settings</Typography>\n                <Box mr={3}>\n                  <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\n                </Box>\n                <Button color=\"secondary\" variant=\"contained\">Sign Up</Button>\n              </Toolbar>\n            </Container>\n          </AppBar>\n\n            <Paper className={s.mainFeaturesPost} style={{ backgroundImage: `url(https://source.unsplash.com/random)` }}>\n              <Container maxWidth=\"xl\">\n                <Grid container>\n                  <Grid item md={6}>\n                    <div className={s.mainFeaturesPostContent}>\n                      <Typography component=\"h1\" color=\"inherit\" variant=\"h3\" gutterBottom>\n                        Social Net Project\n                      </Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Paper>\n      \n    </div>)\n}","import React from \"react\";\nimport List from '@material-ui/core/List';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Drawer } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\n\nexport function Navbar() {\n    const s = useStyles()\n    return (\n        <>\n            <List className={s.navbar}>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            \n    </>\n    )\n}\n","import React from \"react\";\nimport { CardActions, CardContent, Card, CardActionArea, CardMedia, Typography,\n    Button, Box, Paper} from '@material-ui/core';\nimport {useStyles} from '../../../../AppCss';\n\ntype PostProps = {\n    title: string,\n    message: string\n}\n\nexport const Post = (props:PostProps) => {\n    const s = useStyles()\n    return (\n        <Card className={s.marginBottom} >\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"new post\"\n            height=\"140\"\n            image=\"https://lorempixel.com/1000/300\"\n            title=\"Post Title\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.message}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Read more...\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Like\n          </Button>\n        </CardActions>\n      </Card>\n    )\n}","import React from 'react';\nimport { TextareaAutosize, Button, Grid, Typography } from '@material-ui/core';\nimport {useStyles} from '../../../AppCss';\nimport { Post } from './Post/Post';\nimport { ChangeEvent } from 'react';\nimport { ActionTypes } from '../../../redux/state';\n\nexport type PostType = {\n    id:number,\n    message:string,\n    title:string\n}\n\ntype MyPostType = {\n    posts: Array<PostType>,\n    newPostText:string,\n    dispatch:(action: ActionTypes)=> void\n}\n\nexport function MyPosts(props:MyPostType) {\n    const s = useStyles()\n\n    let postsElements = props.posts.map(p => <Post key={p.id} title={p.title} message={p.message}/>)\n\n    const addPost = () => {\n       props.dispatch({type: 'ADD_POST'})\n    }\n\n    const onChangeText = (event:ChangeEvent<HTMLTextAreaElement>)=> {\n        props.dispatch({type:'UPDATE_NEW_POST_TEXT', newText: event.currentTarget.value})\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs={10}>\n            <Typography variant=\"h4\" gutterBottom>My Posts</Typography>\n            <div className={s.marginBottom}>\n                <div>\n                  <input id=\"file-input\" type=\"file\" name=\"file\" multiple/>  \n                </div>\n                    <TextareaAutosize onChange={onChangeText} value={props.newPostText} className={s.newPost} rows={8} aria-label=\"maximum height\" placeholder=\"...\" />  \n                <div >\n                    <Button onClick = {addPost} className={s.btnPost} variant=\"outlined\" color=\"primary\">Add Post</Button>\n                </div>\n            </div>\n            <div >\n            {postsElements}\n            </div>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Avatar, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\n\nexport function ProfileInfo() {\n    const s = useStyles()\n    return (\n        <Grid container spacing={5} justify=\"center\" >\n            <Grid item xs={3} className={s.marginBottom} >\n                <Avatar src=\"https://picsum.photos/200\" className={s.avatarLarge} variant=\"rounded\">NZ</Avatar>\n            </Grid>\n            <Grid item xs={9}>\n               <Typography>Name: Name Lsatname</Typography>\n               <Typography>Location: London</Typography>\n               <Typography>Occupation: Student</Typography>\n            </Grid >\n        </Grid >\n    )\n}","import React from 'react';\nimport {useStyles} from '../../AppCss';\nimport { ActionTypes } from '../../redux/state';\nimport { MyPosts, PostType, } from './MyPosts/MyPosts';\nimport CustomizedDialogs from './MyPosts/Post/MyPostMatUI';\nimport { ProfileInfo } from './ProfileInfo';\n\ntype ProfileType = {\n    posts: Array<PostType>,\n    newPostText:string,\n    dispatch: (action: ActionTypes ) => void\n}\n\n\nexport function Profile (props:ProfileType) {\n\n  \n    const s = useStyles()\n    return (\n        <div>\n        <ProfileInfo/>\n        <MyPosts posts = {props.posts} newPostText={props.newPostText} dispatch={props.dispatch} />\n        <CustomizedDialogs/>\n        </div>\n    )\n}","import React from \"react\";\nimport {  Typography, BottomNavigation, BottomNavigationAction, Container, } from '@material-ui/core';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {useStyles} from '../../AppCss';\n\ntype FooterType = {\n    value?:any,\n    handleChange?: () => void\n}\n\nexport function Footer (props:FooterType) {\n    const s = useStyles()\n     \n    return (\n            <BottomNavigation className={[s.footer, s.root].join(\" \")} value={props.value} onChange={props.handleChange}>\n                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon/>} />\n                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon/>} />\n                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon/>} />\n                <BottomNavigationAction label=\"NearBy\" value=\"nearby\" icon={<LocationOnIcon/>} />\n            </BottomNavigation>\n    )\n}","import React from \"react\";\nimport {Avatar,ListItem,ListItemAvatar,ListItemText } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport type DialogType = {\n    name: string,\n    id: number,\n    message?: string\n}\n\nexport const DialogItem = (props: DialogType) => {\n    const s = useStyles()\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar><PersonIcon /></Avatar>\n            </ListItemAvatar>\n            <ListItemText ><NavLink className={s.navLinkDialogs} to={\"/dialods/\" + props.id}>{props.name}\n            <span className={s.lastMessage}>{props.message}</span></NavLink></ListItemText>\n        </ListItem>\n    )\n}","import React from \"react\";\nimport {ListItem,ListItemText } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport type MessageType = {\n    id: number,\n    message?: string\n}\n\n\nexport const MessageItem = (props: MessageType) => {\n    const s = useStyles()\n    return (\n        <ListItem>\n            \n            <ListItemText ><NavLink className={s.navLinkDialogs} to={\"/dialods/\" + props.id}>\n            <span className={s.lastMessage}>{props.message}</span></NavLink></ListItemText>\n        </ListItem>\n    )\n}","import React from \"react\";\nimport { Grid, Typography,List, } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { DialogItem } from \"./DialogItem\";\nimport { MessageItem, MessageType } from \"./Message\";\nimport { DialogType } from \"./DialogItem\";\n\n\n\nfunction generate(element: React.ReactElement) {\n    return [0, 1, 2].map((value) =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\ntype DialogsType = {\n    dialogs: Array<DialogType>,\n    messages: Array<MessageType>\n}\n\nexport const Dialogs = (props:DialogsType) => {\n\n    let dialogsElements = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />)\n    let messagesElements = props.messages.map(m => <MessageItem key={m.id} id={m.id} message={m.message} />)\n    const s = useStyles()\n    return (\n        <div>\n            <Typography variant=\"h6\" >Friends</Typography>\n        <Grid container spacing={5} >   \n            <Grid item xs={2}>\n                <List >\n                    {dialogsElements}\n                </List>\n            </Grid>\n            <Grid item xs={10}>\n                {messagesElements}\n            </Grid>\n        </Grid>\n</div>\n    )\n}","import React, {LegacyRef, useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport './LineChart.css'\n\ntype EventType = {\n    eventid: string,\n    eventtype: string,\n    startdatetime:string,\n    enddatetime: string,\n    enteredon: string\n}\n\nexport const LineChart = () => {\n    const d3Chart = useRef()as React.MutableRefObject<SVGSVGElement>\n\n        useEffect(()=>{\n            fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                })\n                \n         \n        })\n    \n    return (<div id =\"d3demo\">\n        <h1>D3 React.js Charts</h1>\n        <svg ref={d3Chart}></svg>\n    </div>)\n}","import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Header } from './components/Header/Header';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { Profile } from './components/Profile/Profile';\nimport {useStyles} from './AppCss';\nimport { Container, Grid,} from \"@material-ui/core\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport Divider from '@material-ui/core/Divider';\nimport { Dialogs } from \"./components/Dialogs/Dialogs\";\n//import state, { updateNewPostText } from './redux/state';\nimport { StoreType } from \"./redux/state\";\nimport { LineChart } from \"./components/Charts/Chart\";\n\ntype AppType= {\n  store:StoreType\n}\n\nconst App:React.FC<AppType> = (props) => {\n  const s = useStyles()\n\n  const state = props.store.getState()\n\n  return (\n    <Router>\n      <Header />\n      <Container maxWidth=\"xl\" className={s.mainContent} >\n        <Grid container spacing={5} justify=\"center\" >\n          <Grid item xs={2}>\n            <Navbar />\n            <Divider orientation=\"vertical\" flexItem />\n          </Grid>\n          <Grid item xs={10}>\n              <Route path=\"/profile\" render={()=> <Profile dispatch={props.store.dispatch.bind(props.store)}\n               newPostText={state.profilePage.newPostText}\n               posts={state.profilePage.posts}/>}/>\n              <Route path=\"/dialogs\" render={()=> <Dialogs dialogs={state.dialogsPage.dialogs}\n               messages={state.dialogsPage.messages}/>}/> \n               <Route path=\"/charts\" render={()=> <LineChart/>}/> \n          </Grid>\n        </Grid>\n      </Container>\n     <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { renderTree } from \"../render\"\n\ntype MessageType = {\n    id: number,\n    message: string\n}\ntype DialogType = {\n    id: number,\n    name: string\n}\ntype PostType = {\n    id:number,\n    message:string,\n    title: string,\n    likesCount: number\n}\ntype ProfilePageType = {\n    posts: Array<PostType>,\n    newPostText:string\n}\ntype DialogsPageType = {\n    messages: Array<MessageType>,\n    dialogs: Array<DialogType>\n}\nexport type RootStateType = {\n    profilePage:ProfilePageType,\n    dialogsPage:DialogsPageType,\n}\n\n\nexport type StoreType = {\n    _state: RootStateType,\n    updateNewPostText:(newText:string)=> void,\n    addPost:()=> void,\n    _onChange:()=> void,\n    subscribe:(callback:()=>void)=>void,\n    getState:()=>RootStateType,\n    dispatch: (action:AddPostActionType | UpdateNewTextActionType ) => void\n}\n\ntype AddPostActionType = {\n    type: 'ADD_POST',\n}\n\ntype UpdateNewTextActionType = {\n    type: 'UPDATE_NEW_POST_TEXT',\n    newText: string\n}\n\nexport type ActionTypes =  AddPostActionType | UpdateNewTextActionType\n\nconst store: StoreType = {\n    _state: {\n        profilePage: {\n            newPostText: \"Enter your text\",\n            posts: [\n                { id: 1, message: \"DADADADa\", title: \"Post #1\", likesCount: 12 },\n                { id: 2, message: \"DADADADa\", title: \"Post #1\", likesCount: 4 },\n                { id: 3, message: \"DADADADa\", title: \"Post #1\", likesCount: 50 },\n                { id: 4, message: \"DADADADa\", title: \"Post #1\", likesCount: 44 },\n                { id: 5, message: \"DADADADa\", title: \"Post #1\", likesCount: 12 },\n                { id: 6, message: \"DADADADa\", title: \"Post #1\", likesCount: 20 },\n            ],\n\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: \"Hello\" },\n                { id: 2, message: \"Yo\" },\n                { id: 3, message: \"Hi,hi\" },\n                { id: 4, message: \"Super\" },\n                { id: 5, message: \"I,m happy\" },\n                { id: 6, message: \"Who are you\" },\n                { id: 7, message: \"???\" },\n            ],\n            dialogs: [\n                { id: 1, name: \"Anna\" },\n                { id: 2, name: \"Anton\" },\n                { id: 3, name: \"Maria\" },\n                { id: 4, name: \"Tomas\" },\n                { id: 5, name: \"Viktor\" },\n                { id: 6, name: \"Vera\" },\n                { id: 7, name: \"Igor\" },\n            ],\n        }\n    },\n    _onChange() {\n        console.log('state changed')\n    },\n\n    subscribe(callback) {\n        this._onChange = callback\n    },\n    getState() {\n        return this._state\n    },\n\n    updateNewPostText(newText: string) {\n        this._state.profilePage.newPostText = newText\n        this._onChange()\n    },\n    addPost() {\n        let newPost: PostType = {\n            id: new Date().getTime(),\n            message: this._state.profilePage.newPostText,\n            likesCount: 0,\n            title: \"\"\n        }\n        this._state.profilePage.posts.unshift(newPost)\n        this._state.profilePage.newPostText = \"\"\n        this._onChange()\n    },\n    dispatch(action) {\n        if (action.type === 'ADD_POST') {\n            let newPost: PostType = {\n                id: new Date().getTime(),\n                message: this._state.profilePage.newPostText,\n                likesCount: 0,\n                title: \"\"\n            }\n            this._state.profilePage.posts.unshift(newPost)\n            this._state.profilePage.newPostText = \"\"\n            this._onChange()\n        } else if (action.type === 'UPDATE_NEW_POST_TEXT') {\n            this._state.profilePage.newPostText = action.newText\n            this._onChange()\n        }\n    }\n}\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  store from './redux/state';\n\n\nexport const renderTree = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App store={store} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {renderTree} from './render'\nimport store from './redux/state'\n\nstore.subscribe(renderTree)\nrenderTree()\n\n//renderTree(state)\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}