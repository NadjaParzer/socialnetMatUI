{"version":3,"sources":["reportWebVitals.ts","api/api.ts","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx","redux/users-reducer.tsx","redux/auth-reducer.tsx","redux/redux-store.tsx","AppCss.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/Charts/Chart.tsx","components/Dialogs/DialogItem.tsx","components/Dialogs/Message.tsx","components/Dialogs/Dialogs.tsx","HOC/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","utils/getInitials.ts","components/Users/UsersFunc.tsx","components/Users/UsersClassAPIContainer.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/Post/MyPostMatUI.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","headers","baseURL","usersAPI","currentPage","pageSize","get","response","data","userId","post","resultCode","delete","authAPI","initialState","newPostText","profile","posts","id","message","title","likesCount","addPost","type","updateNewText","newText","messages","newMessageText","dialogs","name","users","totalUsersCount","isFetching","followingInProgress","follow","userID","unfollow","toggleIsFetching","toggleisFollowing","email","login","isAuth","rootReducer","combineReducers","profilePage","state","action","newPost","Date","getTime","dialogsPage","text","usersPage","map","u","followed","totalCount","filter","auth","store","createStore","applyMiddleware","thunkMiddleware","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","toolbar","backgroundColor","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroungRepeat","backgroundPosition","mainFeaturesPostContent","padding","marginTop","mainContent","navbar","footer","avatarLarge","width","height","navLink","textDecoration","fontWeight","lastMessage","marginLeft","navLinkDialogs","btnPost","Navbar","s","List","className","index","ListItem","button","ListItemText","primary","Footer","props","BottomNavigation","join","value","onChange","handleChange","BottomNavigationAction","label","icon","LineChart","d3Chart","useRef","useEffect","fetch","res","json","console","log","ref","DialogItem","ListItemAvatar","Avatar","to","MessageItem","mapStateToProps","withAuthRedirect","Component","connect","restProps","DialogsContainer","compose","dispatch","onNewMessageChange","onSendMessageClick","dialogsElements","d","messagesElements","m","Typography","variant","Grid","container","item","xs","event","currentTarget","placeholder","onClick","replace","split","slice","v","toUpperCase","Usersfunc","style","textAlign","pages","p","onPageChanged","fontSize","Card","CircularProgress","size","justifyContent","src","photos","small","getInitials","status","Button","disabled","some","unfollowThunk","followThunk","UserClassAPIComponent","getUsersThunkCreator","this","amountOfPages","Math","ceil","i","push","React","UsersContainer","setCurrentPage","items","Post","CardActionArea","CardMedia","component","alt","image","CardContent","gutterBottom","CardActions","MyPostsContainer","updateNewPostText","postsElements","multiple","TextareaAutosize","rows","DialogTitle","withStyles","createStyles","margin","closeButton","right","top","grey","children","classes","onClose","other","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","useState","open","setOpen","handleClose","Dialog","dividers","autoFocus","ProfileStatus","ProfileInfo","justify","large","fullName","lookingForAJob","Profile","ProfileAPI","match","params","getUserProfileThunk","ProfileContainer","withRouter","Header","AppBar","Container","maxWidth","Toolbar","edge","Box","mr","Paper","backgroundImage","md","HeaderAPI","getAuthUserDataThunk","HeaderContainer","setAuthData","Login","App","Divider","orientation","flexItem","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a0b2bc3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  headers: {\"API-KEY\": \"04557cb8-61b0-426f-9f9f-fa4bd1a1ce23\"},\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0\"\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => response.data)\r\n  },\r\n  \r\n  follow(userId: number) {\r\n    return instance.post(`/follow/${userId}`)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          return response\r\n        }\r\n      })\r\n  },\r\n  unfollow(userId: number) {\r\n    return instance.delete(`/follow/${userId}`)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          return response\r\n        }\r\n      })\r\n  },\r\n  getProfile(userId: string) {\r\n    return instance.get(`/profile/` + userId)\r\n      .then(response => response.data ) \r\n  }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n  getMe() {\r\n    return instance.get(`/auth/me`)\r\n      .then(response => {\r\n        return response\r\n  })\r\n},\r\n}\r\n\r\n","import { Dispatch } from \"redux\"\nimport { usersAPI } from \"../api/api\"\n\ntype PostType = {\n    id:number,\n    message:string,\n    title: string,\n    likesCount: number\n}\nexport type ProfilePageType = {\n    posts: Array<PostType>,\n    newPostText:string,\n    profile: any,\n}\n\nexport type ProfileActionType = ReturnType<typeof addPost> | ReturnType<typeof updateNewText> \n                       | ReturnType<typeof setUserProfile> \n\nlet initialState: ProfilePageType = {\n    newPostText: \"Enter your text\",\n    profile: null,\n    posts: [\n        { id: 1, message: \"DADADADa\", title: \"Post #1\", likesCount: 12 },\n        { id: 2, message: \"DADADADa\", title: \"Post #1\", likesCount: 4 },\n        { id: 3, message: \"DADADADa\", title: \"Post #1\", likesCount: 50 },\n        { id: 4, message: \"DADADADa\", title: \"Post #1\", likesCount: 44 },\n        { id: 5, message: \"DADADADa\", title: \"Post #1\", likesCount: 12 },\n        { id: 6, message: \"DADADADa\", title: \"Post #1\", likesCount: 20 },\n    ]\n}\n\nexport const addPost = () => ({type: 'ADD_POST'}) as const\nexport const updateNewText = (newText: string) => ({type: 'UPDATE_NEW_POST_TEXT',newText: newText}) as const\nexport const setUserProfile = (profile: any) => ({type: 'SET_USER_PROFILE', profile: profile}) as const\n\nexport const getUserProfileThunk = (userId: string) => (dispatch: Dispatch) => {\n    usersAPI.getProfile(userId)\n        .then(response => {\n            dispatch(setUserProfile(response))\n        })\n}\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\n\n    switch (action.type) {\n        case 'ADD_POST': \n            let newPost: PostType = {\n                id: new Date().getTime(),\n                message: state.newPostText,\n                likesCount: 0,\n                title: \"\"\n            }\n            return {\n                ...state,\n                posts: [newPost, ...state.posts],\n                newPostText: ''\n            }\n        case 'UPDATE_NEW_POST_TEXT': \n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        case 'SET_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            }\n        default:\n            return state\n    }\n}","\n\ntype MessageType = {\n    id: number,\n    message: string\n}\nexport type DialogType = {\n    id: number,\n    name: string\n}\nexport type DialogsPageType = {\n    messages: Array<MessageType>,\n    dialogs: Array<DialogType>,\n    newMessageText: string\n}\n\nlet initialState: DialogsPageType = {\n    messages: [\n        { id: 1, message: \"Hello\" },\n        { id: 2, message: \"Yo\" },\n        { id: 3, message: \"Hi,hi\" },\n        { id: 4, message: \"Super\" },\n        { id: 5, message: \"I,m happy\" },\n        { id: 6, message: \"Who are you\" },\n        { id: 7, message: \"???\" },\n    ],\n    newMessageText: \"\",\n    dialogs: [\n        { id: 1, name: \"Anna\" },\n        { id: 2, name: \"Anton\" },\n        { id: 3, name: \"Maria\" },\n        { id: 4, name: \"Tomas\" },\n        { id: 5, name: \"Viktor\" },\n        { id: 6, name: \"Vera\" },\n        { id: 7, name: \"Igor\" },\n    ],\n}\nexport type DialogsActionType = ReturnType<typeof updateNewMessageTextActionCreator> | ReturnType<typeof sendMessageActionCreator> \n\nexport const updateNewMessageTextActionCreator = (newMessageText: string) => ({type: 'UPDATE_NEW_MESSAGE_TEXT', newMessageText: newMessageText }) as const\nexport const sendMessageActionCreator = () => ({type: 'SEND_MESSAGE'}) as const\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionType): DialogsPageType => {\n    let stateCopy\n    switch (action.type) {\n        case 'UPDATE_NEW_MESSAGE_TEXT':\n            return {\n                ...state,\n                newMessageText: action.newMessageText\n            }\n        case 'SEND_MESSAGE':\n            let text = state.newMessageText\n            return {\n                ...state,\n                newMessageText: '',\n                messages: [...state.messages, {id: 8, message: text}]\n            }\n        default:\n            return state\n    }\n}","import { Dispatch } from \"redux\"\r\nimport { usersAPI } from \"../api/api\"\r\n\r\n\r\ntype LocationType = {\r\n    city: string,\r\n    country: string\r\n}\r\nexport type UserType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    location: LocationType,\r\n    photos: {\r\n        small: string,\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type UsersPageType = {\r\n    users: Array <UserType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype UsersActionType = ReturnType<typeof follow> | ReturnType<typeof unfollow> \r\n                       | ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage>\r\n                       | ReturnType<typeof setUsersTotalCount> | ReturnType<typeof toggleIsFetching>\r\n                       | ReturnType<typeof toggleisFollowing>\r\n\r\nlet initialState: UsersPageType = {\r\n    users: [],\r\n    pageSize:10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const follow = (userID: number) => ({type: 'FOLLOW', userID}) as const\r\nexport const unfollow = (userID: number) => ({type: 'UNFOLLOW', userID}) as const\r\nexport const setUsers = (users: Array<UserType>) => ({type: 'SET_USERS', users}) as const\r\nexport const setCurrentPage = (currentPage:number) => ({type: 'SET_CURRENT_PAGE', currentPage}) as const\r\nexport const setUsersTotalCount = (totalCount:number) => ({type: 'SET_USERS_TOTAL_COUNT', totalCount}) as const\r\nexport const toggleIsFetching = (isFetching:boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching}) as const\r\nexport const toggleisFollowing = (isFetching:boolean, userId: number) => ({type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId}) as const\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n            usersAPI.getUsers(currentPage, pageSize).then(response => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(response.items))\r\n                dispatch(setUsersTotalCount(response.totalCount))\r\n            })\r\n    }\r\n}\r\n\r\nexport const followThunk = (userId:number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleisFollowing(true, userId))\r\n                usersAPI.follow(userId)\r\n                  .then(res => {\r\n                    dispatch(follow(userId))\r\n                    dispatch(toggleisFollowing(false, userId))\r\n                  })\r\n    }\r\n}\r\nexport const unfollowThunk = (userId:number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleisFollowing(true, userId))\r\n                usersAPI.unfollow(userId)\r\n                  .then(res => {\r\n                    dispatch(unfollow(userId))\r\n                    dispatch(toggleisFollowing(false, userId))\r\n                  })\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionType): UsersPageType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID){ \r\n                        return {...u, followed: true} \r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID){return { ...u, followed: false}}\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SET_CURRENT_PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'SET_USERS_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching \r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId),\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Dispatch } from \"redux\"\r\nimport { authAPI } from \"../api/api\"\r\n\r\n\r\nexport type UserAuthType = {\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean\r\n}\r\n\r\ntype UserAuthActionType = ReturnType<typeof setAuthData> \r\n\r\nlet initialState: UserAuthType  = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: UserAuthType = initialState, action: UserAuthActionType): UserAuthType => {\r\n  switch (action.type) {\r\n      case 'SET_USER_DATA':\r\n          return {\r\n            ...state,\r\n            ...action.data,\r\n            isAuth: true\r\n          }\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const setAuthData = (userId: number, email: string, login: string) => ({type: 'SET_USER_DATA', data: {userId, email, login} }) as const\r\n\r\nexport const getAuthUserDataThunk = () => (dispatch: Dispatch) => {\r\n  authAPI.getMe()\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          let {id, login, email} = response.data.data\r\n          dispatch(setAuthData(id, email, login))\r\n        }\r\n      }) \r\n}","import {createStore, combineReducers, Store, applyMiddleware} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport { usersReducer } from './users-reducer';\r\nimport { authReducer } from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store: Store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n","import {makeStyles} from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport { isWhiteSpaceLike } from 'typescript';\n\n\nexport const useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  toolbar: {\n    backgroundColor: \"#117B80\",\n  },\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturesPost: {\n    position: \"relative\",\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundSize: \"cover\",\n    backgroungRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  mainFeaturesPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(6),\n    marginTop: theme.spacing(8)\n  },\n  mainContent: {},\n  navbar: {\n    flexGrow: 6\n  },\n  footer: {\n    backgroundColor: \"#117B80\",\n    marginTop: \"740px\",\n  },\n  avatarLarge: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n  },\n  newPost: {\n    width: \"99%\",\n    height: 50\n  },\n  marginBottom: {\n    marginBottom: \"10em\"\n  },\n  navLink: {\n    color: \"white\",\n    textDecoration: \"none\",\n    \"&.active\": {\n      color: \"orange\",\n      fontWeight: \"bold\"\n\n    }\n  },\n  lastMessage: {\n    marginLeft: \"10em\",\n\n  },\n  navLinkDialogs: {\n    color: \"black\",\n    textDecoration: \"none\",\n    \"&.active\": {\n      color: \"grey\",\n      fontWeight: \"bold\"\n    },\n  },\n  btnPost:{\n    marginLeft:\"84em\"\n  }\n}\n))","import React from \"react\";\nimport List from '@material-ui/core/List';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Drawer } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\n\nexport function Navbar() {\n    const s = useStyles()\n    return (\n        <>\n            <List className={s.navbar}>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            \n    </>\n    )\n}\n","import React from \"react\";\nimport {  Typography, BottomNavigation, BottomNavigationAction, Container, } from '@material-ui/core';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {useStyles} from '../../AppCss';\n\ntype FooterType = {\n    value?:any,\n    handleChange?: () => void\n}\n\nexport function Footer (props:FooterType) {\n    const s = useStyles()\n     \n    return (\n            <BottomNavigation className={[s.footer, s.root].join(\" \")} value={props.value} onChange={props.handleChange}>\n                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon/>} />\n                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon/>} />\n                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon/>} />\n                <BottomNavigationAction label=\"NearBy\" value=\"nearby\" icon={<LocationOnIcon/>} />\n            </BottomNavigation>\n    )\n}","import React, {LegacyRef, useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport './LineChart.css'\n\ntype EventType = {\n    eventid: string,\n    eventtype: string,\n    startdatetime:string,\n    enddatetime: string,\n    enteredon: string\n}\n\nexport const LineChart = () => {\n    const d3Chart = useRef()as React.MutableRefObject<SVGSVGElement>\n\n        useEffect(()=>{\n            fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                })\n                \n         \n        })\n    \n    return (<div id =\"d3demo\">\n        <h1>D3 React.js Charts</h1>\n        <svg ref={d3Chart}></svg>\n    </div>)\n}","import React from \"react\";\nimport {Avatar,ListItem,ListItemAvatar,ListItemText } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport type DialogType = {\n    name: string,\n    id: number,\n    message?: string\n}\n\nexport const DialogItem = (props: DialogType) => {\n    const s = useStyles()\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar><PersonIcon /></Avatar>\n            </ListItemAvatar>\n            <ListItemText ><NavLink className={s.navLinkDialogs} to={\"/dialods/\" + props.id}>{props.name}\n            <span className={s.lastMessage}>{props.message}</span></NavLink></ListItemText>\n        </ListItem>\n    )\n}","import React from \"react\";\nimport {ListItem,ListItemText } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport type MessageType = {\n    id: number,\n    message?: string\n}\n\n\nexport const MessageItem = (props: MessageType) => {\n    const s = useStyles()\n    return (\n        <ListItem>\n            \n            <ListItemText ><NavLink className={s.navLinkDialogs} to={\"/dialods/\" + props.id}>\n            <span className={s.lastMessage}>{props.message}</span></NavLink></ListItemText>\n        </ListItem>\n    )\n}","import React from \"react\";\nimport { Grid, Typography,List, } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport { DialogItem } from \"./DialogItem\";\nimport { MessageItem} from \"./Message\";\nimport { ChangeEvent } from 'react';\nimport { DialogsPagePropsType } from \"./DialogsContainer\";\nimport { Redirect } from \"react-router\";\n\n\nfunction generate(element: React.ReactElement) {\n    return [0, 1, 2].map((value) =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\nexport const Dialogs = (props:DialogsPagePropsType) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />)\n    let messagesElements = props.dialogsPage.messages.map(m => <MessageItem key={m.id} id={m.id} message={m.message} />)\n    let newMessageText = props.dialogsPage.newMessageText\n    let onSendMessageClick = () => props.onSendMessageClick()\n    let onNewMessageChange = (event:ChangeEvent<HTMLTextAreaElement>) => {\n        let text = event.currentTarget.value\n        props.onNewMessageChange(text)\n    }\n\n    const s = useStyles()\n    return (\n        <div>\n            <Typography variant=\"h6\" >Friends</Typography>\n        <Grid container spacing={5} >   \n            <Grid item xs={2}>\n                <List >\n                    {dialogsElements}\n                </List>\n            </Grid>\n            <Grid item xs={10}>\n                <div>{messagesElements}</div>\n                <div><textarea onChange={onNewMessageChange} value={newMessageText} placeholder=\"Enter your message\" />\n                <button onClick={onSendMessageClick}>Send</button></div>\n            </Grid>\n        </Grid>\n</div>\n    )\n}","import React, { ComponentType } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport {AppStateType} from '../redux/redux-store'\r\nimport { connect } from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType ): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n  const RedirectComponent = (props: MapStateToPropsType) => {\r\n    let {isAuth, ...restProps} = props\r\n    if (!isAuth) return <Redirect to={\"/login\"} />\r\n    return <Component {...restProps as T} />\r\n  }\r\n\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}","import React from \"react\";\r\nimport { DialogsPageType, sendMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport { compose, Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\n\r\nfunction generate(element: React.ReactElement) {\r\n    return [0, 1, 2].map((value) =>\r\n      React.cloneElement(element, {\r\n        key: value,\r\n      }),\r\n    );\r\n  }\r\n\r\n//type DialogsType = {\r\n  //  dialogs?: Array<DialogType>,\r\n   // newMessageText?: string,\r\n   // messages?: Array<MessageType>,\r\n   // dispatch?:Dispatch\r\n//}\r\n\r\ntype MapStatePropsType = {\r\n  dialogsPage: DialogsPageType,\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  onNewMessageChange: (text:string)=> void\r\n  onSendMessageClick:() => void\r\n}\r\nexport type DialogsPagePropsType = MapStatePropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state:AppStateType): MapStatePropsType => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:Dispatch): MapDispatchToPropsType => {\r\n  return {\r\n    onNewMessageChange: (text) => {dispatch(updateNewMessageTextActionCreator(text))},\r\n    onSendMessageClick: () => {dispatch(sendMessageActionCreator())}\r\n  }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs)\r\n\r\n//export const DialogsContainer = withAuthRedirect(connect(mapStateToProps,mapDispatchToProps)(Dialogs))","export default (name: string = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import { Avatar, Button, Card, CircularProgress, Grid, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport getInitials from '../../utils/getInitials';\r\n\r\ntype UsersFuncProps = {\r\n  pages: Array<number>,\r\n  onPageChanged: (page: number) => void,\r\n  currentPage: number,\r\n  totalUsersCount: number,\r\n  users: Array<UserType>,\r\n  unfollow: (id: number) => void,\r\n  follow: (id: number) => void,\r\n  isFetching: boolean,\r\n  //toggleisFollowing: (isFetching: boolean, userId: number) => void,\r\n  followingInProgress: Array<number>,\r\n  followThunk: (id: number) => void,\r\n  unfollowThunk: (id: number) => void,\r\n}\r\n\r\nexport const Usersfunc = (props: UsersFuncProps) => {\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'center' }}>\r\n        {props.pages.map(p => {\r\n          return <span onClick={() => props.onPageChanged(p)}\r\n            style={props.currentPage === p ? { fontSize: \"24px\", fontWeight: \"bold\", color: 'black' } : { fontSize: \"20px\", color: 'grey' }}>\r\n            {` ${p} `}\r\n          </span>\r\n        })}\r\n      </div>\r\n      <Card style={{ marginBottom: '50px' }} >\r\n        <Typography variant='h6' style={{ color: 'primary' }} >\r\n          {`Amount of members: ${props.totalUsersCount}`}\r\n        </Typography>\r\n      </Card>\r\n\r\n      {props.isFetching ? <div style={{ textAlign: 'center' }}><CircularProgress size=\"60px\" color=\"secondary\" /> </div> : null}\r\n      {props.users.map(u => <Card style={{ marginTop: '10px' }} key={u.id}>\r\n\r\n        <Grid container\r\n          style={{ padding: '10px' }}\r\n          justifyContent='space-between'>\r\n\r\n          <Grid item>\r\n            <NavLink to={\"/profile/\" + u.id}>\r\n              <Avatar src={u.photos.small != null ? u.photos?.small : \"\"}>\r\n                {getInitials(u.name)}\r\n              </Avatar>\r\n            </NavLink>\r\n            <Typography>\r\n              {u.name}\r\n            </Typography>\r\n            <Typography>\r\n              {`Location: `}\r\n            </Typography>\r\n            <Typography>\r\n              {`Status: ${u.status}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {u.followed\r\n              ? <Button variant=\"contained\" disabled={props.followingInProgress.some(id => id === u.id)} color=\"primary\" onClick={() => {\r\n                props.unfollowThunk(u.id)\r\n              }}>Unfollow</Button>\r\n              : <Button variant=\"contained\" disabled={props.followingInProgress.some(id => id === u.id)} color=\"secondary\" onClick={() => {\r\n                props.followThunk(u.id)\r\n              }\r\n              }>Follow</Button>}\r\n            <Button>Send message</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Card>)}\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { UsersPagePropsType } from './UsersContainer';\r\nimport { Usersfunc } from \"./UsersFunc\";\r\n\r\nexport class UserClassAPIComponent extends React.Component<UsersPagePropsType> {\r\n  // constructor(props: UsersPagePropsType) {\r\n  //   super(props);\r\n  // }\r\n  componentDidMount () {\r\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    // //this.props.toggleIsFetching(true)\r\n    // if (this.props.users.length === 0) {\r\n    //   usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n    //       this.props.setUsers(response.items)\r\n    //       this.props.setUsersTotalCount(response.totalCount)\r\n    //     })\r\n    // }\r\n  }\r\n  onPageChanged = (p: number) => {\r\n    this.props.getUsersThunkCreator(p, this.props.pageSize)\r\n    // this.props.setCurrentPage(p)\r\n    // this.props.toggleIsFetching(true)\r\n    // usersAPI.getUsers(p, this.props.pageSize).then(response => {\r\n    //       this.props.toggleIsFetching(false)\r\n    //       this.props.setUsers(response.items)\r\n    //     })\r\n  }\r\n  render() {\r\n    let amountOfPages = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n    let pages = []\r\n    for (let i=1; i< amountOfPages; i++) {\r\n      pages.push(i)\r\n    }\r\n\r\n    return <Usersfunc pages={pages} \r\n                      onPageChanged={this.onPageChanged}\r\n                      currentPage = {this.props.currentPage}\r\n                      totalUsersCount = {this.props.totalUsersCount}\r\n                      users = {this.props.users}\r\n                      follow= {this.props.follow}\r\n                      unfollow= {this.props.unfollow}\r\n                      isFetching= {this.props.isFetching}\r\n                      followingInProgress={this.props.followingInProgress}\r\n                      //toggleisFollowing={this.props.toggleisFollowing}\r\n                      followThunk={this.props.followThunk}\r\n                      unfollowThunk={this.props.unfollowThunk}\r\n                      />\r\n  }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { follow, setCurrentPage, followThunk, unfollowThunk,  unfollow, UserType,getUsersThunkCreator, toggleisFollowing } from \"../../redux/users-reducer\";\r\nimport  { UserClassAPIComponent} from \"./UsersClassAPIContainer\";\r\n\r\ntype OwnPropsType = {\r\n\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  follow: (id:number) => void,\r\n  unfollow: (id:number) => void,\r\n  // setUsers: (users: Array<UserType>) => void,\r\n  setCurrentPage: (currentPage: number) => void,\r\n  // setUsersTotalCount: (totalCount: number) => void,\r\n  // toggleIsFetching: (isFetching: boolean) => void,\r\n  //toggleisFollowing: (isFetching: boolean, userId: number) => void,\r\n  getUsersThunkCreator: (currentPage: number, pageSize: number) => void,\r\n  followThunk: (userId: number) => void,\r\n  unfollowThunk: (userId: number) => void,\r\n}\r\ntype MapStatePropsType = {\r\n  users: Array<UserType>,\r\n  pageSize: number,\r\n  totalUsersCount: number,\r\n  currentPage: number,\r\n  isFetching: boolean,\r\n  followingInProgress: Array<number>,\r\n}\r\n\r\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchToPropsType & OwnPropsType\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n    \r\n  } \r\n}\r\n\r\n// let mapDispatchToProps = (dispatch:Dispatch): MapDispatchToPropsType => {\r\n//   console.log('users.container')\r\n//   return {\r\n//     follow: (userId: number) => {dispatch(follow(userId))},\r\n//     unfollow: (userId: number) => {dispatch(unfollow(userId))},\r\n//     setUsers: (users: Array<UserType>) => {dispatch(setUsers(users))},\r\n//     setCurrentPage: (currentPage: number) => {dispatch(setCurrentPage(currentPage))},\r\n//     setUsersTotalCount: (totalCount: number) => {dispatch(setUsersTotalCount(totalCount))},\r\n//     toggleIsFetching: (isFetching: boolean) => {dispatch(toggleIsFetching(isFetching))}\r\n//   }\r\n// }\r\n// export const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UserClassAPIComponent)\r\n\r\n// export const UsersContainer = withAuthRedirect(connect<MapStatePropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n//   follow,\r\n//   unfollow,\r\n//   // setUsers,\r\n//   setCurrentPage,\r\n//   // setUsersTotalCount,\r\n//   // toggleIsFetching,\r\n//   //toggleisFollowing,\r\n//   getUsersThunkCreator,\r\n//   followThunk,\r\n//   unfollowThunk\r\n// })(UserClassAPIComponent))\r\n\r\nexport const UsersContainer = compose<React.ComponentType>(\r\n  withAuthRedirect,\r\n  connect<MapStatePropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    // setUsers,\r\n    setCurrentPage,\r\n    // setUsersTotalCount,\r\n    // toggleIsFetching,\r\n    //toggleisFollowing,\r\n    getUsersThunkCreator,\r\n    followThunk,\r\n    unfollowThunk\r\n  })\r\n)(UserClassAPIComponent)\r\n","import React from \"react\";\nimport { CardActions, CardContent, Card, CardActionArea, CardMedia, Typography,\n    Button, Box, Paper} from '@material-ui/core';\nimport {useStyles} from '../../../../AppCss';\n\ntype PostProps = {\n    title: string,\n    message: string\n}\n\nexport const Post = (props:PostProps) => {\n    const s = useStyles()\n    return (\n        <Card className={s.marginBottom} >\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"new post\"\n            height=\"140\"\n            image=\"https://lorempixel.com/1000/300\"\n            title=\"Post Title\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.message}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Read more...\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Like\n          </Button>\n        </CardActions>\n      </Card>\n    )\n}","\r\nimport { addPost, ProfileActionType, updateNewText } from '../../../redux/profile-reducer';\r\nimport { MyPosts } from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport type PostType = {\r\n    id:number,\r\n    message:string,\r\n    title:string\r\n}\r\n\r\ntype MyPostType = {\r\n    posts?: Array<PostType>,\r\n    newPostText?:string,\r\n    dispatch?:(action: ProfileActionType )=> void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewText(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPost())\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\nimport { TextareaAutosize, Button, Grid, Typography } from '@material-ui/core';\nimport {useStyles} from '../../../AppCss';\nimport { Post } from './Post/Post';\nimport { ChangeEvent } from 'react';\n\nexport type PostType = {\n    id:number,\n    message:string,\n    title:string\n}\n\ntype MyPostType = {\n    posts: Array<PostType>,\n    newPostText:string,\n    updateNewPostText: (text: string) => void\n    addPost: () => void\n}\n\nexport function MyPosts(props:MyPostType) {\n    const s = useStyles()\n\n    let postsElements = props.posts.map(p => <Post key={p.id} title={p.title} message={p.message}/>)\n\n    const addPost = () => {\n       props.addPost()\n    }\n\n    const onChangeText = (event:ChangeEvent<HTMLTextAreaElement>)=> {\n        let text = event.currentTarget.value\n        props.updateNewPostText(text)\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs={10}>\n            <Typography variant=\"h4\" gutterBottom>My Posts</Typography>\n            <div className={s.marginBottom}>\n                <div>\n                  <input id=\"file-input\" type=\"file\" name=\"file\" multiple/>  \n                </div>\n                    <TextareaAutosize onChange={onChangeText} value={props.newPostText} className={s.newPost} rows={8} aria-label=\"maximum height\" placeholder=\"...\" />  \n                <div >\n                    <Button onClick = {addPost} className={s.btnPost} variant=\"outlined\" color=\"primary\">Add Post</Button>\n                </div>\n            </div>\n            <div >\n            {postsElements}\n            </div>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\r\nimport {Typography } from \"@material-ui/core\";\r\n\r\n\r\ntype ProfileStatusType = {\r\n  status: string\r\n}\r\n\r\nexport const ProfileStatus = (props: ProfileStatusType) => {\r\n  return <Typography>{props.status}</Typography>\r\n}","import React from 'react';\nimport { Avatar, Button, CircularProgress, Container, Grid, Typography } from \"@material-ui/core\";\nimport {useStyles} from '../../AppCss';\nimport getInitials from '../../utils/getInitials';\nimport { ProfileStatus } from './ProfileStatus';\n\ntype ProfileInfoPropsType = {\n    profile: any\n}\n\nexport function ProfileInfo(props: ProfileInfoPropsType) {\n    const s = useStyles()\n    if (!props.profile) {\n        return <div style={{textAlign: 'center'}}><CircularProgress size=\"60px\" color=\"secondary\" /> </div>\n    }\n    console.log(props.profile)\n    return (\n        <Grid container spacing={5} justify=\"center\" >\n            <Grid item xs={3} className={s.marginBottom} >\n                <Avatar src={props.profile.photos.large} className={s.avatarLarge} variant=\"rounded\">{getInitials(props.profile.fullName)}</Avatar>\n                <ProfileStatus status={'hello my friends!!'} />\n            </Grid>\n            <Grid item xs={9}>\n               <Typography>{`Name: ${props.profile.fullName}`}</Typography>\n               <Typography>Location: London</Typography>\n               <Typography>{`Looking for job: ${props.profile.lookingForAJob}`}</Typography>\n              \n            </Grid >\n        </Grid >\n    )\n}","import {useStyles} from '../../AppCss';\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\nimport CustomizedDialogs from './MyPosts/Post/MyPostMatUI';\nimport { ProfileInfo } from './ProfileInfo';\nimport { ProfilePagePropsType } from './ProfileContainer';\n\nexport function Profile (props:ProfilePagePropsType) {\n\n  \n    const s = useStyles()\n    return (\n        <div>\n        <ProfileInfo profile={props.profile}/>\n        <MyPostsContainer />\n        <CustomizedDialogs/>\n        </div>\n    )\n}\n\n// <MyPostsContainer posts = {props.posts} newPostText={props.newPostText} dispatch={props.dispatch} />","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { addPost,updateNewText, getUserProfileThunk } from '../../redux/profile-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { PostType } from './MyPosts/MyPosts';\r\nimport { Profile } from './Profile';\r\n\r\ntype OwnPropsType = {}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n  addPost: () => void,\r\n  updateNewText: (newText: string) => void,\r\n  getUserProfileThunk: (userId: string) => void, \r\n}\r\ntype MapStatePropsType = {\r\n  profile: any,\r\n  posts: Array<PostType>,\r\n  newPostText: string,\r\n  isAuth: boolean,\r\n}\r\nexport type ProfilePagePropsType = MapStatePropsType & MapDispatchToPropsType & OwnPropsType\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & ProfilePagePropsType \r\n\r\nclass ProfileAPI extends React.Component<CommonPropsType> {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = '2'\r\n    } \r\n    this.props.getUserProfileThunk(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile {...this.props} profile={this.props.profile}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    isAuth: state.auth.isAuth\r\n  } \r\n}\r\n// withRouter - для того, чтобы сохранялось id выбранного пользователя, аналог location в хуках\r\n// закидываются данные из url (id)\r\n// добавляются в пропсы объекты match (совпадение урла с роутерами), location, history\r\n//////////////////////\r\n// let WithURLdataContainer = withRouter(ProfileAPI)\r\n// export const ProfileContainer = withAuthRedirect(connect<MapStatePropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n//   addPost,\r\n//   updateNewText,\r\n//   getUserProfileThunk\r\n// })(WithURLdataContainer))\r\n\r\nexport const ProfileContainer = compose<React.ComponentType>(\r\n  //withAuthRedirect,\r\n  connect<MapStatePropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    addPost,\r\n    updateNewText,\r\n    getUserProfileThunk\r\n  }),\r\n  withRouter\r\n)(ProfileAPI)","import React from \"react\";\nimport { Container, Grid, AppBar, Toolbar, IconButton, Typography,\n    Button, Box, Paper,Link} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useStyles} from '../../AppCss';\nimport { NavLink } from \"react-router-dom\";\n\ntype HeaderProps = {\n isAuth: boolean,\n login: null | string,\n userId: null | number\n}\n\nexport function Header (props: HeaderProps) {\n    const s = useStyles()\n    console.log('headerComp:' + props)\n    return (<div>\n         <AppBar position=\"fixed\" className={s.toolbar}>\n            <Container maxWidth=\"xl\">\n              <Toolbar  >\n                <IconButton edge=\"start\" color=\"inherit\"\n                  aria-label=\"menu\" className={s.menuButton}>\n                <MenuIcon />\n                </IconButton>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/profile\">Profile</NavLink></Typography>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/dialogs\">Dialogs</NavLink></Typography>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/users\">Users</NavLink></Typography>\n                <Typography className={s.title}><NavLink className={s.navLink} to=\"/settings\">Settings</NavLink></Typography>\n                <Box mr={3}>\n                  { props.isAuth ? <NavLink style={{color: 'white', textDecoration: 'none'}} to={\"/profile/\" + props.userId}>{props.login}</NavLink> \n                                 : <NavLink style={{color: 'white', textDecoration: 'none'}} to=\"/login\">\n                                    <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\n                                  </NavLink>\n                  }\n                  \n                </Box>\n                <Button color=\"secondary\" variant=\"contained\">Sign Up</Button>\n              </Toolbar>\n            </Container>\n          </AppBar>\n\n            <Paper className={s.mainFeaturesPost} style={{ backgroundImage: `url(https://source.unsplash.com/random)` }}>\n              <Container maxWidth=\"xl\">\n                <Grid container>\n                  <Grid item md={6}>\n                    <div className={s.mainFeaturesPostContent}>\n                      <Typography component=\"h1\" color=\"inherit\" variant=\"h3\" gutterBottom>\n                        Social Net Project\n                      </Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Paper>\n      \n    </div>)\n}","import { connect } from \"react-redux\";\r\nimport React from 'react'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { Header } from './Header'\r\nimport { getAuthUserDataThunk, setAuthData } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderAPI extends React.Component<HeaderPropsType> {\r\n  componentDidMount() {\r\n    console.log(this.props)\r\n    this.props.getAuthUserDataThunk()\r\n    console.log(this.props)\r\n  }\r\n  \r\n  render() {\r\n    return <Header isAuth={this.props.isAuth} userId={this.props.userId} login={this.props.login} />\r\n  }\r\n}\r\n\r\ntype OwnPropsType = {\r\n\r\n}\r\ntype MapStatePropsType = {\r\n  isAuth: boolean,\r\n  login: string | null,\r\n  userId: null | number\r\n}\r\ntype MapDispatchToPropsType = {\r\n  getAuthUserDataThunk:() => void\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId \r\n  }\r\n}\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchToPropsType & OwnPropsType\r\nexport const HeaderContainer = connect<MapStatePropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n  getAuthUserDataThunk\r\n})(HeaderAPI) ","import React from 'react'\r\n\r\nexport const Login = () => {\r\n  return <h1>LOGIN</h1>\r\n}\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Navbar } from './components/Navbar/Navbar';\nimport {useStyles} from './AppCss';\nimport { Container, Grid,} from \"@material-ui/core\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport Divider from '@material-ui/core/Divider';\nimport { LineChart } from \"./components/Charts/Chart\";\nimport { DialogsContainer } from \"./components/Dialogs/DialogsContainer\";\nimport { AppStateType} from \"./redux/redux-store\";\nimport { Dispatch } from \"redux\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport { ProfileContainer } from \"./components/Profile/ProfileContainer\";\nimport { HeaderContainer } from \"./components/Header/HeaderContainer\";\nimport { Login } from \"./components/Login/Login\";\n\n\ntype AppType= {\n  state?: AppStateType;\n  dispatch?: Dispatch\n}\n\n\nconst App:React.FC<AppType> = (props) => {\n  const s = useStyles()\n  console.log('app')\n\n  return (\n    <Router>\n      <HeaderContainer />\n      <Container maxWidth=\"xl\" className={s.mainContent} >\n        <Grid container spacing={5} justify=\"center\" >\n          <Grid item xs={2}>\n            <Navbar />\n            <Divider orientation=\"vertical\" flexItem />\n          </Grid>\n          <Grid item xs={10}>\n            {/* // /: - данные после добавляются в params в match в пропсах у компoненты */}\n              <Route path=\"/profile/:userId?\" render={()=> <ProfileContainer />}/>\n              <Route path=\"/dialogs\" render={()=> <DialogsContainer />}/> \n              <Route path=\"/charts\" render={()=> <LineChart/>}/> \n              <Route path=\"/users\" render={()=> <UsersContainer/>}/>\n              <Route path=\"/login\" render={()=> <Login />}/>\n              <Route path=\"/settings\" render={()=> <LineChart/>}/>\n          </Grid>\n        </Grid>\n      </Container>\n     <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n\n//<DialogsContainer dispatch={props.dispatch} \n//               dialogs={props.state.dialogsPage.dialogs} newMessageText={props.state.dialogsPage.newMessageText}\n//               messages={props.state.dialogsPage.messages}/>\n\n// <Profile dispatch={props.dispatch}\n//               newPostText={props.state.profilePage.newPostText}\n//               posts={props.state.profilePage.posts}/>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/redux-store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\n\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}